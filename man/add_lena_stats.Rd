% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lena.R
\name{add_lena_stats}
\alias{add_lena_stats}
\title{Add LENA stats to each interval in a dataframe}
\usage{
add_lena_stats(its_xml, intervals, time_type = c("wall", "wav"))
}
\arguments{
\item{its_xml}{XML object created by \code{rlena::read_its_file}.}

\item{intervals}{A tibble with columns depending on \code{time_type}:
\itemize{
\item For \code{wall}: \code{interval_start}, \code{interval_end} (POSIXct), \code{interval_start_wav} (ms)
\item For \code{wav}: \code{interval_start_wav}, \code{interval_end_wav} (both in ms since wav start)
Can contain other columns.
}}

\item{time_type}{Either \code{wall} or \code{wav}. If \code{wall} (default), expects columns
\code{interval_start}, \code{interval_end} (POSIXct timestamps), and \code{interval_start_wav}
(milliseconds since wav start). Will calculate \code{interval_end_wav} dynamically
and drop it from output. If \code{wav}, expects \code{interval_start_wav} and
\code{interval_end_wav} (both in milliseconds since wav start).}
}
\value{
Same as \code{intervals} but with three new columns: \code{cvc}, \code{ctc}, and
\code{awc}. Missing values are replaced with 0 for intervals without segments.
}
\description{
Add LENA stats to each interval in a dataframe
}
\note{
ITS segments overlapping with intervals are allocated proportionally
based on the overlap duration. If a segment overlaps multiple intervals,
it contributes proportionally to each based on overlap length.

The difference between this function and \code{calculate_lena_like_stats}
is that the latter calculates exactly the same stats but does it for every
five minute period of wall time (e.g., 13:00-13:05). It should be rewritten
to first create these intervals and then use \code{add_lena_stats} to avoid code
repetition (see issue #).
}
